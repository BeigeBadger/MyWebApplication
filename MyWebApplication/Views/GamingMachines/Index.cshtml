@model IEnumerable<GamingMachine>

@{
	ViewBag.Title = "Manage Page";

	var feedbackClasses = !TempData.ContainsKey("DeleteSucceeded")
		? ""
		: (bool)TempData["DeleteSucceeded"] ? "alert alert-success" : "alert alert-danger";
}

<div class="jumbotron">
	<h1>Manage gaming machines</h1>
	<p class="lead">Perform CRUD operations on gaming machines</p>
</div>

<div class="@feedbackClasses">
	<p>
		@(TempData.ContainsKey("DeleteResultMessage") ? TempData["DeleteResultMessage"].ToString() : "")
	</p>
</div>

<!--
	Have the search form and create new gaming machine links outside
	of the partial view for the GamingMachines as we might want to
	use the partial view somewhere that searching or creating a new
	machine doesn't make sense
-->
<p>
	@Html.ActionLink("Create New", "Create")
</p>

<hr />

@using (Html.BeginForm("Index", "GamingMachines", FormMethod.Get))
{
	<p>
		Filter by name: @Html.TextBox("filterBy", ViewBag.CurrentFilter as string)
		<input type="submit" value="Filter" id="btnSubmit" />
		<input type="button" value="Clear" id="btnClear" />
	</p>
}

@{
	Html.RenderPartial("_GamingMachineList", Model);
}

<!--
	Render inside the scripts place holder section that lives in _Layout.cshtml,
	we do this so that our script is rendered/loaded AFTER we have included the
	libraries and thus we don't get errors when trying to use their functionality
-->
@section scripts {
	<script type="text/javascript">
		$(function () {
			// Handle clearing the filter
			$('#btnClear').on('click', function () {
				$('input[name="filterBy"]').val("");
				window.location = '@Url.Action("Index", "GamingMachines", new { resetList = true })'
			});
		});
	</script>
}